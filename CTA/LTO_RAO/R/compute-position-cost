#!/usr/bin/perl -w
#
# usage: compute-position-cost <input file> <physmapdir>
#
# input file generated as follows
# [root@castortapelog01 tmp]# cd /var/log/tape
# [root@castortapelog01 tape]# zfgrep -h 'read from tape' castor-tape.log-201807* castor-tape.log-201808* castor-tape.log-201809* castor-tape.log |grep 'TPVID="L7'|awk '{print $1 " " $2 " " $3 " " $17 " " $20 " " $24 " " $25 " " $27}' >/tmp/L7reads-complete.txt
#
# generates machine-parsable output with the following information, for each positioning:
#
# VID HOST FROM_WRAP FROM_LPOS TO_WRAP TO_LPOS BANDCHANGE(1/0) WRAPCHANGE(1/0) DIRCHANGE(1/0) STEPBACK(1/) TIME VOLREQID FTRANSID
#
# 



use strict;
use warnings;

my $trackcount = 168; # for LTO-7M only. TODO: parametrisation for other types

my ($inputfile, $physmapdir) = @ARGV;

unless (-e $inputfile && -d $physmapdir) {
  print "ERROR with input parameters\n";
  exit(-1);
}

#
# read in all map files
#
my $physmapfile;
my $handle;
my %map_wrap;
my %map_lpos;
my $vid;
my $dh;
opendir $dh, $physmapdir;
foreach $physmapfile (readdir $dh) {
  if ($physmapfile =~ m%^(\S+)\.pmap$%) {
    $vid = $1;
    unless (open $handle, '<', $physmapdir . '/' . $physmapfile) {
      print "ERROR cannot open mapping file: ".$physmapfile."\n";
      exit(-1);
    }
  } else {
    print "skip file: ".$physmapfile."\n";
    next;
  }
  chomp(my @maplines = <$handle>);
  close $handle;
  my $lastfseq;
  print "processing file: " . $physmapfile . "\n";
  foreach my $line (@maplines) {
    next if ($line =~ m%^(#|$)%); # ignore lines starting with # (comments) and empty lines
    if ($line =~ m%^(\S+)\s+(\d+)\s+(\d+)\s+(\d+)\s*\S*$%) {
      my ($fseq,$wrap,$lpos,$blockid) = ($1,$2,$3,$4);
      if ($fseq eq 'EOD') {
	$fseq = $lastfseq+1;
      }
      $map_wrap{$vid}{$fseq}=$wrap;
      $map_lpos{$vid}{$fseq}=$lpos;
      $lastfseq = $fseq;
    } else {
      print "skip line: ".$line."\n";
    }
  }
}

close ($dh);

#
# now have all mappings in %map_wrap and %map_lpos
# check now the input file with all timings
# format:
# 2018/08/09 03:41:36.439313 tpsrv233 volReqId="40512640" TPVID="L70448" fSeq="1481" fileTransactionId="39" positionTime="37.445058"


unless (open $handle, '<', $inputfile) {
  print "ERROR cannot open input file: ".$inputfile."\n";
  exit(-1);
}
chomp(my @inputlines = <$handle>);
close $handle;

my %frommap;
my %cost;
my %tapeserver;
my %tape;
my %ftransid;
my %volreqid;
my $prevfseq;

my ($from_wrap,$to_wrap,$from_lpos,$to_lpos);


foreach my $line (@inputlines) {
  if ($line =~ m%^\S+\s+\S+\s+(\S+)\s+volReqId=\"(\d+)\"\s+TPVID=\"(\S+)\"\s+fSeq=\"(\d+)\"\s+fileTransactionId=\"(\d+)\"\s+positionTime=\"(\S+)\"$%) {
    my ($tpsrv,$volreqid,$tpvid,$fseq,$ftransid,$postime)=($1,$2,$3,$4,$5,$6);
    unless (exists $map_wrap{$tpvid}) {
      print "INFO do not know this tape: $tpvid\n";
      next;
    }
    $frommap{$volreqid}{$ftransid}=$fseq;
    print "processing: $volreqid $tpvid $fseq $ftransid $postime\n";
    # assume input is time-ordered. In order to see from where a positioning was coming from, look up $frommap. If it doesn't exist - ignore this timing.
    if (exists $frommap{$volreqid} && exists $frommap{$volreqid}{$ftransid-1}) {
      $prevfseq = $frommap{$volreqid}{$ftransid-1};
    } elsif ($ftransid-1 == 0) {
      $prevfseq = 0; # BOT
    } else {
      print "INFO do not know where this fseq was coming from: ".$line."\n";
      next;
    }
    
    # $cost{$volreqid}{wrap_from}{lpos_from}{wrap_to}{lpos_to} = $postime

    if ($prevfseq + 1 == $fseq) {
      # trivial case, not interested to analyse
      print "continuous reading from " . $prevfseq . " to " . $fseq . ", ignoring\n";
      next;
    }
      
    $from_wrap = $map_wrap{$tpvid}{$prevfseq+1}; # end of the segment == beginning of next segment
    $from_lpos = $from_wrap % 2 ? $map_lpos{$tpvid}{$prevfseq+1} + 1 : $map_lpos{$tpvid}{$prevfseq+1} - 1;  # forth (even) tracks: end of fseq is at lpos-1; back (odd) tracks: end of fseq is lpos+1
    if ($from_lpos == -1) {
      # oh, can't be earlier than the physical beginning of tape. It could have been exactly the end of the previous wrap but that's unlikely
      $from_lpos = 0;
    }

    $to_wrap = $map_wrap{$tpvid}{$fseq};
    $to_lpos = $map_lpos{$tpvid}{$fseq};
    
    $cost{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} = $postime;
    $ftransid{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} = $ftransid;
    $tapeserver{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} = $tpsrv;
    $tape{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} = $tpvid;
    

  } else {
    print "INFO line not parsed: ".$line."\n";
  }
}

print "---------------------\n";
print "DUMPING\n";
print "---------------------\n";
print "= VID HOST FROM_WRAP FROM_LPOS TO_WRAP TO_LPOS BANDCHANGE WRAPCHANGE DIRCHANGE STEPBACK TIME VOLREQID FTRANSID\n";

  
foreach my $volreqid (sort {$a <=> $b} keys %cost) {
  foreach $from_wrap (sort {$a <=> $b} keys %{$cost{$volreqid}}) {
    foreach $from_lpos (sort {$a <=> $b} keys %{$cost{$volreqid}{$from_wrap}}) {
      foreach $to_wrap (sort {$a <=> $b} keys %{$cost{$volreqid}{$from_wrap}{$from_lpos}}) {
	foreach $to_lpos (sort {$a <=> $b} keys %{$cost{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}}) {

	  my ($band_change,$wrap_change,$dir_change,$stepbackmotion) = (0,0,0,0,0);

	  if ($from_wrap != $to_wrap) {
	    $wrap_change = 1;
	    if (int($from_wrap / ($trackcount/4)) != int($to_wrap / ($trackcount/4))) {
	      $band_change = 1;
	    }
	  }
	  if ($from_wrap % 2 != $to_wrap % 2) {
	    # different direction
	    $dir_change = 1;
	    # step back?
	    #	  if (($from_wrap % 2 == 0 && $from_lpos < $to_lpos) || ($from_wrap % 2 == 1 && $from_lpos > $to_lpos)) {
	    #	    $stepbackmotion = 1;
	    #	  }
	  } else {
	    # same direction
	    # step back?
	    if (($from_wrap % 2 == 0 && $from_lpos > $to_lpos) || ($from_wrap % 2 == 1 && $from_lpos < $to_lpos))  {
	      $stepbackmotion = 1;
	    }
	  }
	  print "= " . $tape{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} . " " . $tapeserver{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos};
	  print " " . $from_wrap . " " . $from_lpos . " " . $to_wrap . " " . $to_lpos . " " .
	    $band_change . " " . $wrap_change . " " . $dir_change . " " . $stepbackmotion . " " . $cost{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos};
	  print " " . $volreqid . " " .
	    $ftransid{$volreqid}{$from_wrap}{$from_lpos}{$to_wrap}{$to_lpos} . "\n";
	}
      }
    }
  }
}

# all done :-)  

