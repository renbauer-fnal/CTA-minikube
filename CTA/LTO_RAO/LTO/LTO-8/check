#!/usr/bin/perl -w

use strict;

use LC::File qw(file_contents);

my $subor='vv';

my $vysledky = file_contents($subor) if (-f $subor);

my ($wrap, $track, $direction, $block1, $block2, $seek, $previousseek, $previousrewind, $rewind) = (1, 1, 'forward', 0, 0, 0, 0, 0, 0);
foreach my $line (split ("\n", $vysledky)) {
  # ### Block: 79850 Block: 79850 Seek time: 40790507498 Rewind time: 42530197958
  if ($line =~ /^### Block: (\d+) Block: (\d+) Seek time: (\d+.\d+) Rewind time: (\d+.\d+)$/oi) {
    ($block1, $block2, $seek, $rewind) = ($1, $2, $3, $4);
    print STDERR "wrap: $wrap track: $track direction: $direction block1 $block1 block2: $block2 seek: $seek previousseek: $previousseek previousrewind: $previousrewind rewind: $rewind\n";
    die "blocks not equal: $block1, $block2\n" if ($block1 != $block2);
    if (($direction eq 'forward') and ($seek < $previousseek)) {
#    if (($direction eq 'forward') and ($rewind < $previousrewind)) {
      $direction = 'backwards';
      $track++;
    }
    if (($direction eq 'backwards') and ($seek > $previousseek)) {
#    if (($direction eq 'backwards') and ($rewind > $previousrewind)) {
      $direction = 'forward';
      $track++;
      $wrap++ if ($track % 2) == 1;
    }
    print "wrap: $wrap track: $track direction: $direction block1 $block1 block2: $block2 seek: $seek rewind: $rewind\n";
    $previousseek = $seek;
    $previousrewind = $rewind;
  } else {
    print "Unexpected line: $line\n";
  }
}
